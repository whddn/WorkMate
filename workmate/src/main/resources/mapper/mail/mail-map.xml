<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.workmate.app.mail.mapper.MailMapper">
	<!-- 받은메일함 리스트 -->
	<select id="findReceivedMailsList" parameterType="int"
		resultType="MailVO">
		SELECT
		M.MAIL_ID,
		M.USER_NO AS SENDER_NO,
		E_SENDER.USER_NAME
		AS SENDER_NAME,
		M.RECIPIENTS,
		M.SUBJECT,
		M.CONTENT,
		M.SENT_AT,
		M.STATUS,
		M.FOLDER_ID,
		M.IS_READ AS isRead,
		(SELECT COUNT(*) FROM ATTACHMENT A WHERE A.MAIL_ID =
		M.MAIL_ID) AS
		ATTACHMENT_COUNT
		FROM MAIL M
			JOIN EMPLOYEE E_SENDER ON
			M.USER_NO = E_SENDER.USER_NO
		WHERE E_SENDER.USER_NO = #{userNo}
			and
			M.FOLDER_ID = 1001
		ORDER BY M.SENT_AT DESC
	</select>
	<!-- 받은메일 단건조회 -->
	<select id="findMailById" parameterType="int" resultType="MailVO">
		SELECT
		MAIL_ID,
		USER_NO,
		CC_LIST,
		RECIPIENTS,
		SUBJECT,
		CONTENT,
		SENT_AT,
		STATUS,
		IS_READ AS isRead,
		FOLDER_ID,
		ENCRYPTED,
		SENDER_EMAIL
		FROM MAIL
		WHERE MAIL_ID = #{mailId}
	</select>
	<!-- 보낸메일 저장 -->
	<insert id="insertMail" parameterType="MailVO" >
	<selectKey keyProperty="mail.mailId" resultType="Integer" order="BEFORE">
			SELECT MAIL_SEQ.NEXTVAL
			FROM dual
		</selectKey>
		INSERT INTO MAIL
		( MAIL_ID, SENDER_EMAIL, MESSAGE_ID,ENCRYPTED_PWD,MAIL_ROLE,
		USER_NO, RECIPIENTS, CC_LIST, SUBJECT, CONTENT, SENT_AT, STATUS,
		FOLDER_ID, ENCRYPTED, MAIL_TYPE, IS_SPAM, RESER_SENDTIME, RESER_STATUS)
		VALUES
		(#{mail.mailId},#{mail.senderEmail}, #{mail.messageId},#{mail.encryptedPwd},#{mail.mailRole},
		#{mail.userNo}, #{mail.recipients}, #{mail.ccList}, #{mail.subject},
		#{mail.content}, SYSDATE, #{mail.status}, #{mail.folderId},
		#{mail.encrypted}, #{mail.mailType}, #{mail.isSpam},#{mail.reserSendtime}, #{mail.reserStatus})
	</insert>

	<!-- 보낸 메일 전체 -->
	<select id="findSentMailsList" parameterType="map"
		resultType="MailVO">
		SELECT
		M.MAIL_ID,
		M.USER_NO,
		M.RECIPIENTS,
		M.SUBJECT,
		M.CONTENT,
		M.SENT_AT,
		M.STATUS,
		M.RESER_STATUS,       
   		M.RESER_SENDTIME,
		M.FOLDER_ID,
		(SELECT COUNT(*) FROM ATTACHMENT A WHERE A.MAIL_ID = M.MAIL_ID) AS
		ATTACHMENT_COUNT
		FROM MAIL M
		WHERE M.USER_NO = #{userNo}
		AND M.FOLDER_ID = 1002
		ORDER BY M.SENT_AT DESC
	</select>
	<!-- 보낸 메일 단건 -->
	<select id="findSentMailById" resultType="MailVO">
		SELECT
		M.MAIL_ID,
		M.USER_NO AS SENDER_NO,
		E_SENDER.USER_NAME AS SENDER_NAME,
		M.RECIPIENTS,
		M.CC_LIST,
		M.SUBJECT,
		M.CONTENT,
		M.SENT_AT,
		M.STATUS,
		M.FOLDER_ID,
		(SELECT COUNT(*) FROM ATTACHMENT A WHERE A.MAIL_ID = M.MAIL_ID) AS
		ATTACHMENT_COUNT
		FROM MAIL M
		JOIN EMPLOYEE E_SENDER ON M.USER_NO = E_SENDER.USER_NO
		WHERE M.MAIL_ID = #{mailId}
	</select>
	<!-- 내부사용자 조회 -->
	<select id="findUserByEmail" resultType="MailVO">
		SELECT USER_NO FROM EMPLOYEE WHERE USER_MAIL = #{email}
	</select>
	<!-- 폴더 전체 조회 -->
<select id="selectMailFolderList" parameterType="int" resultType="MailFolderVO">
    SELECT FOLDER_ID, USER_NO, FOLDER_NAME, FOLDER_TYPE, EDITABLE
    FROM MAIL_FOLDER
    WHERE USER_NO = #{userNo}
      AND FOLDER_TYPE = 'TAG' <!-- 유저 생성 폴더만 가져오기 -->
    ORDER BY FOLDER_ID
</select>

<!-- 폴더 추가 -->
<insert id="insertMailFolder" parameterType="MailFolderVO">
    INSERT INTO MAIL_FOLDER (
        FOLDER_ID,
        USER_NO,
        FOLDER_NAME,
        FOLDER_TYPE,
        EDITABLE
    ) VALUES (
        MAIL_FOLDER_SEQ.NEXTVAL,
        #{folder.userNo},
        #{folder.folderName},
        #{folder.folderType},
        #{folder.editable}
    )
</insert>
<!-- 로그인한 본인 폴더만 삭제 가능 -->
<delete id="deleteMailFolder">
    DELETE FROM MAIL_FOLDER
    WHERE FOLDER_ID = #{folderId}
      AND USER_NO = #{userNo} 
</delete>

<!-- 특정 폴더에 속한 메일들을 조회 -->
<select id="selectMailsByFolderId" resultType="MailVO">
    SELECT
        M.MAIL_ID,
        M.USER_NO,
        M.RECIPIENTS,
        M.CC_LIST,
        M.SUBJECT,
        M.CONTENT,
        M.SENT_AT,
        M.STATUS,
        M.FOLDER_ID,
        (SELECT COUNT(*) FROM ATTACHMENT A WHERE A.MAIL_ID = M.MAIL_ID) AS ATTACHMENT_COUNT
    FROM MAIL M
    WHERE M.USER_NO = #{userNo}
      AND M.FOLDER_ID = #{folderId}
    ORDER BY M.SENT_AT DESC
</select>
<!-- 메일 폴더 이동 -->
<update id="updateMailFolder">
    UPDATE MAIL
    SET FOLDER_ID = #{folderId}
    WHERE MAIL_ID = #{mailId}
</update>
<!--특정 폴더(FOLDER_ID) 안에 있는 메일들만 조회-->
<select id="selectMailListByFolderId" resultType="MailVO">
    SELECT
        M.MAIL_ID,
        M.USER_NO,
        M.RECIPIENTS,
        M.CC_LIST,
        M.SUBJECT,
        M.CONTENT,
        M.SENT_AT,
        M.STATUS,
        M.FOLDER_ID,
        M.MAIL_ROLE,
        M.IS_READ AS isRead,
        (SELECT COUNT(*) FROM ATTACHMENT A WHERE A.MAIL_ID = M.MAIL_ID) AS ATTACHMENT_COUNT
    FROM MAIL M
    WHERE M.USER_NO = #{userNo}
      AND M.FOLDER_ID = #{folderId}
    ORDER BY M.SENT_AT DESC
</select>
<!--특정폴더이름 넘기기(내가만든 폴더)-->
<select id="selectMailFolderById" resultType="MailFolderVO">
    SELECT FOLDER_ID, USER_NO, FOLDER_NAME, FOLDER_TYPE, EDITABLE
    FROM MAIL_FOLDER
    WHERE FOLDER_ID = #{folderId}
</select>
<!--메일 완전삭제-->
<delete id="deleteMail">
    DELETE FROM MAIL WHERE MAIL_ID = #{mailId}
</delete>
<!-- 페이징된 메일 조회 -->
<select id="selectMailListPaging" resultType="MailVO">
    SELECT * FROM (
        SELECT inner_result.*, ROWNUM rn FROM (
            SELECT
                M.MAIL_ID,
                M.USER_NO,
                M.RECIPIENTS,
                M.CC_LIST,
                M.SUBJECT,
                M.SENDER_EMAIL,
                M.CONTENT,
                M.SENT_AT,
                M.STATUS,
                M.RESER_STATUS,       
   			    M.RESER_SENDTIME,
                M.FOLDER_ID,
                M.IS_READ AS isRead,
                (SELECT COUNT(*) FROM ATTACHMENT A WHERE A.MAIL_ID = M.MAIL_ID) AS ATTACHMENT_COUNT
            FROM MAIL M
            WHERE M.USER_NO = #{userNo}
              AND M.FOLDER_ID = #{folderId}
            ORDER BY M.SENT_AT DESC
        ) inner_result
        WHERE ROWNUM &lt;= #{offset} + #{limit} 
    )
    WHERE rn &gt; #{offset}
</select>
 
<!-- 총 메일 개수 조회 -->
<select id="countMailsByFolder" resultType="int">
    SELECT COUNT(*) FROM MAIL
    WHERE USER_NO = #{userNo}
      AND FOLDER_ID = #{folderId}
</select>
	<!-- spam 메일 목록 -->
<select id="findSpamMails" resultType="MailVO">
    SELECT *
    FROM MAIL
    WHERE USER_NO = #{userNo}
      AND FOLDER_ID = 1004
    ORDER BY SENT_AT DESC
</select>
<!-- 전체부서목록 조회 -->
<select id="selectDepartmentList" resultType="com.workmate.app.employee.service.DepartmentVO">
  SELECT DEPARTMENT_ID AS departmentId,
         DEPARTMENT_HEAD AS departmentHead,
         DEPARTMENT_NAME AS departmentName,
         BUDGET AS budget,
         BUDGET_STATUS AS budgetStatus
  FROM DEPARTMENT
</select>
<!-- 특정부서 팀목록 -->
<select id="selectTeamListByDepartment" resultType="com.workmate.app.employee.service.TeamVO">
  SELECT TEAM_NO AS teamNo,
         TEAM_NAME AS teamName,
         TEAM_PERMISSION AS teamPermission,
         LEADER_NO AS leaderNo
  FROM TEAM
  WHERE DEPARTMENT_ID = #{departmentId}
</select>
<!-- 특정 팀에 속한 사원들의 이메일 주소 -->
<select id="selectEmailsByTeam" resultType="String">
  SELECT USER_MAIL FROM EMPLOYEE WHERE TEAM_NO = #{teamNo} AND STATUS_USER = '재직'
</select>
<!-- 특정 팀에 속한 사원들의 정보 전체 -->
<select id="selectEmployeesByTeam" resultType="com.workmate.app.employee.service.EmpVO">
    SELECT USER_NAME, USER_MAIL
    FROM EMPLOYEE
    WHERE TEAM_NO = #{teamNo}
    AND STATUS_USER = '재직'
</select>
<!-- 예약된 메일 중 발송 시점이 지난 것 조회 -->
<select id="selectScheduledMails" resultType="MailVO">
    SELECT *
    FROM MAIL
    WHERE RESER_STATUS = '예약됨'
      AND RESER_SENDTIME &lt;= SYSDATE
</select>

<!-- 예약 상태 업데이트 -->
<update id="updateReserStatus">
    UPDATE MAIL
    SET RESER_STATUS = #{status}
    WHERE MAIL_ID = #{mailId}
</update>
<!-- 특정 메일(mailId)에 첨부된 파일(Attachment) 목록을 DB에서 조회 -->
<select id="findAttachmentsByMailId" parameterType="int" resultType="com.workmate.app.mail.service.AttachmentVO">
    SELECT
        FILE_ID,
        MAIL_ID,
        FILE_NAME,
        FILE_TYPE,
        FILE_SIZE,
        FILE_PATH
    FROM ATTACHMENT
    WHERE MAIL_ID = #{mailId}
</select>


</mapper>