<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.workmate.app.approval.mapper.ApprFormMapper">
	<!-- 전체조회 -->
	<select id="selectApprFormList" resultType="ApprFormVO">
		SELECT appr_title
		    , form_name
		    , form_path
		    , department_name
		    , user_name
		FROM appr_form
		    JOIN employee
		    ON TO_NUMBER(appr_form.contact_no)=employee.user_no
		    JOIN team
		    ON employee.team_no=team.team_no
		    JOIN department
		    ON team.department_id=department.department_id;
	</select>
	
	<!-- 단건조회 -->
	<select id="selectEmpInfo" parameterType="EmpVO" resultType="EmpVO">
		SELECT employee_id
		    , first_name
		    , last_name
		    , email
		    , phone_number
		    , hire_date
		    , job_id
		    , salary
		    , commission_pct
		    , manager_id
		    , department_id
		FROM employees
		WHERE employee_id = #{employeeId}
		<!-- Mybatis => 
			PrepareStatement => 
			데이터 타입에 따른 작업 -->
		<!-- #{} : parameterType에 선언된 변수의 필드값을 넣는다!! -->
	</select>
	
	<!-- 등록 -->
	<insert id="insertEmpInfo" parameterType="EmpVO">
		<selectKey keyProperty="employeeId" resultType="Integer" order="BEFORE">
		<!-- keyProperty는 결과를 담을 필드/변수를 뜻한다 -->
			SELECT NVL(MAX(employee_id), 100) + 1
			FROM employees
		</selectKey>
		INSERT INTO employees
			(
				employee_id
				, last_name
				, email
				, job_id
				, hire_date
				<if test="salary != null and salary > 0">
				, salary
				</if>
			)
		VALUES
			(
				<!-- employees_seq.NEXTVAL -->
				#{employeeId}
				, #{lastName}
				, #{email}
				, #{jobId}
				<choose>
					<when test="hireDate != null">
				, #{hireDate}
					</when>
					<otherwise>
				, SYSDATE
					</otherwise>
				</choose>
				<if test="salary != null and salary > 0">
				, #{salary}
				</if>
			)
	</insert>
	
	<!-- 수정 -->
	<update id="updateEmpInfo" parameterType="EmpVO">
		UPDATE employees
		SET 
			last_name = #{lastName}
			, email = #{email}
			, hire_date = #{hireDate}
			<if test="jobId != null and !jobId.equals('')">
			<!-- 특정 조건을 만족할 때만 실행되는 구문 -->
			, job_id = #{jobId}
			</if>
			, salary = #{salary}
		WHERE employee_id = #{employeeId}
	</update>
	
	<!-- 삭제 -->
	<delete id="deleteEmpInfo" parameterType="int">
		<!-- 객체가 아닌 기본 타입일 경우 매개변수 이름 그대로 사용 -->
		DELETE FROM employees
		WHERE employee_id = #{empId}
	</delete>
</mapper>